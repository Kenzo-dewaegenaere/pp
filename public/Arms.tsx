/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 arms.glb --types -T --keepmeshes -s --keepmaterials 
Files: arms.glb [2.56MB] > /Users/kenzodewaegenaere/development/pp/src/assets/Models/Arms/arms-transformed.glb [437.29KB] (83%)
Author: OblixStudio (https://sketchfab.com/OblixStudio)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-fps-arms-rigged-animated-6e6b0613f06a4ab78b89e52095d5d338
Title: Low Poly FPS Arms (Rigged-Animated)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_10: THREE.SkinnedMesh
    Object_11: THREE.SkinnedMesh
    Object_12: THREE.SkinnedMesh
    Object_13: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    ['Material.014']: THREE.MeshStandardMaterial
    ['Material.015']: THREE.MeshStandardMaterial
    ['Material.016']: THREE.MeshStandardMaterial
    ['Material.017']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ActionName = 'rig|HandShoot' | 'rig|Idle'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}
type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/arms-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="arms">
        <primitive object={nodes._rootJoint} />
        <skinnedMesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials['Material.014']} skeleton={nodes.Object_10.skeleton} rotation={[-Math.PI / 2, 0, 0]} />
        <skinnedMesh name="Object_11" geometry={nodes.Object_11.geometry} material={materials['Material.015']} skeleton={nodes.Object_11.skeleton} rotation={[-Math.PI / 2, 0, 0]} />
        <skinnedMesh name="Object_12" geometry={nodes.Object_12.geometry} material={materials['Material.016']} skeleton={nodes.Object_12.skeleton} rotation={[-Math.PI / 2, 0, 0]} />
        <skinnedMesh name="Object_13" geometry={nodes.Object_13.geometry} material={materials['Material.017']} skeleton={nodes.Object_13.skeleton} rotation={[-Math.PI / 2, 0, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/arms-transformed.glb')
